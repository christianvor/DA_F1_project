---
title: "Predicting_Finishing_Position"
author: "Wiktor"
format: html
editor: visual
---

```{r}
library(ggplot2)
library(tidyverse)
```

```{r}
data <- read.csv('data/F1_preprocessed')

head(data)
str(data)
summary(data)

hist(data$points)
max(data$points)
```

```{r}
#throwing out the NAs and all rides that have the finishing position 24
#the NAs break the code and the finishing position 24 mostly means that the driver did not finish the race at all
data_clean <- na.omit(data)
data_clean <- data_clean[which(data_clean$FinishingPosition != 24),]
```

```{r}
baseplot <- ggplot(data_clean, aes(x=StartingPosition, y=FinishingPosition) ) +
  stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white") +
  scale_x_continuous(n.breaks = 25) +
  scale_y_continuous(n.breaks = 25)

baseplot
```

```{r}
#the starting position has a strong positive correlation of 0.74 to the finishing position
#the other variables were included as a check
#it seems that the two practice positions are also correlated to the actual starting position
cor(data_clean[, 10:14])
```

```{r}
fitPos <- lm(FinishingPosition ~ StartingPosition, data = data_clean)
coeff <- coefficients(fitPos)
baseplot + geom_smooth(method = "lm", se = FALSE, colour="red")

coeff
```

```{r}
baseplotTrain1 <- ggplot(data_clean, aes(x=PositionPractice1, y=FinishingPosition) ) +
  stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white") +
  scale_x_continuous(n.breaks = 25) +
  scale_y_continuous(n.breaks = 25)
fitPosTrain1 <- lm(FinishingPosition ~ PositionPractice1, data = data_clean)
coeffTrain1 <- coefficients(fitPosTrain1)
baseplotTrain1 + geom_smooth(method = "lm", se = FALSE, colour="red")

coeffTrain1
```

```{r}
baseplotTrain2 <- ggplot(data_clean, aes(x=PositionPractice2, y=FinishingPosition) ) +
  stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white") +
  scale_x_continuous(n.breaks = 25) +
  scale_y_continuous(n.breaks = 25)
fitPosTrain2 <- lm(FinishingPosition ~ PositionPractice2, data = data_clean)
coeffTrain2 <- coefficients(fitPosTrain2)
baseplotTrain2 + geom_smooth(method = "lm", se = FALSE, colour="red")

coeffTrain2
```

```{r}
#I will still do multiple linear regression here - patience please
```
